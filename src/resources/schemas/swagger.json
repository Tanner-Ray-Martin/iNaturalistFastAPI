{
    "basePath": "/v1",
    "definitions": {
        "AutocompleteTaxon": {
            "allOf": [
                {
                    "$ref": "#/definitions/CoreTaxon"
                },
                {
                    "properties": {
                        "default_photo": {
                            "$ref": "#/definitions/TaxonPhoto"
                        },
                        "matched_term": {
                            "type": "string"
                        },
                        "observations_count": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "BaseResponse": {
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_results": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Color": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Comment": {
            "properties": {
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "created_at_details": {
                    "$ref": "#/definitions/DateDetails"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "type": "object"
        },
        "ConservationStatus": {
            "properties": {
                "place": {
                    "$ref": "#/definitions/CorePlace"
                },
                "place_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CorePlace": {
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CoreTaxon": {
            "properties": {
                "iconic_taxon_id": {
                    "type": "integer"
                },
                "iconic_taxon_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "preferred_common_name": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                },
                "rank_level": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DateDetails": {
            "properties": {
                "date": {
                    "format": "date",
                    "type": "string"
                },
                "day": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "week": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EstablishmentMeans": {
            "properties": {
                "establishment_means": {
                    "type": "string"
                },
                "place": {
                    "$ref": "#/definitions/CorePlace"
                }
            },
            "type": "object"
        },
        "Fave": {
            "properties": {
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "votable_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FieldValue": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Identification": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "current": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "observation_id": {
                    "type": "integer"
                },
                "taxon": {
                    "$ref": "#/definitions/ObservationTaxon"
                },
                "updated_at": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IdentificationsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/Identification"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "Message": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "from_user": {
                    "$ref": "#/definitions/User"
                },
                "id": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "thread_flags": {
                    "description": "Array of flags on messages in this thread. Only included when\nthreads=true\n",
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "thread_id": {
                    "description": "Identifier for the message thread, generally the ID of the sender's\ncopy of the first message\n",
                    "type": "integer"
                },
                "thread_messages_count": {
                    "description": "Number of messages in this thread. Only included when threads=true\n",
                    "type": "integer"
                },
                "to_user": {
                    "$ref": "#/definitions/User"
                },
                "user_id": {
                    "description": "ID of the user to whom this message belongs. Messages work like email,\nso the sender gets a copy and the recipient gets a copy of each\nmessage. This is always the authenticated user, so there's no real\nneed for a full user object.\n",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MessagesResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/Message"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "NearbyPlacesResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "properties": {
                                "community": {
                                    "items": {
                                        "$ref": "#/definitions/ShowPlace"
                                    },
                                    "type": "array"
                                },
                                "standard": {
                                    "items": {
                                        "$ref": "#/definitions/ShowPlace"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "NonOwnerIdentification": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "created_at_details": {
                    "$ref": "#/definitions/DateDetails"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "type": "object"
        },
        "Observation": {
            "properties": {
                "cached_votes_total": {
                    "type": "integer"
                },
                "captive": {
                    "type": "boolean"
                },
                "comments": {
                    "items": {
                        "$ref": "#/definitions/Comment"
                    },
                    "type": "array"
                },
                "comments_count": {
                    "type": "integer"
                },
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "created_at_details": {
                    "$ref": "#/definitions/DateDetails"
                },
                "created_time_zone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "faves_count": {
                    "type": "integer"
                },
                "geojson": {
                    "$ref": "#/definitions/PointGeoJson"
                },
                "geoprivacy": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_please": {
                    "type": "boolean"
                },
                "identifications_count": {
                    "type": "integer"
                },
                "identifications_most_agree": {
                    "type": "boolean"
                },
                "identifications_most_disagree": {
                    "type": "boolean"
                },
                "identifications_some_agree": {
                    "type": "boolean"
                },
                "license_code": {
                    "type": "string"
                },
                "location": {
                    "description": "in the format \"lat,lng\"",
                    "type": "string"
                },
                "mappable": {
                    "type": "boolean"
                },
                "non_owner_ids": {
                    "items": {
                        "$ref": "#/definitions/NonOwnerIdentification"
                    },
                    "type": "array"
                },
                "num_identification_agreements": {
                    "type": "integer"
                },
                "num_identification_disagreements": {
                    "type": "integer"
                },
                "obscured": {
                    "type": "boolean"
                },
                "observed_on": {
                    "format": "date-time",
                    "type": "string"
                },
                "observed_on_details": {
                    "$ref": "#/definitions/DateDetails"
                },
                "observed_on_string": {
                    "type": "string"
                },
                "observed_time_zone": {
                    "type": "string"
                },
                "ofvs": {
                    "items": {
                        "$ref": "#/definitions/FieldValue"
                    },
                    "type": "array"
                },
                "out_of_range": {
                    "type": "boolean"
                },
                "photos": {
                    "items": {
                        "$ref": "#/definitions/Photo"
                    },
                    "type": "array"
                },
                "place_guess": {
                    "type": "string"
                },
                "place_ids": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "project_ids": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "project_ids_with_curator_id": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "project_ids_without_curator_id": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "quality_grade": {
                    "type": "string"
                },
                "reviewed_by": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "site_id": {
                    "type": "integer"
                },
                "sounds": {
                    "items": {
                        "$ref": "#/definitions/Sound"
                    },
                    "type": "array"
                },
                "species_guess": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "taxon": {
                    "$ref": "#/definitions/ObservationTaxon"
                },
                "taxon_geoprivacy": {
                    "type": "string"
                },
                "time_observed_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "time_zone_offset": {
                    "type": "string"
                },
                "updated_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "verifiable": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ObservationTaxon": {
            "allOf": [
                {
                    "$ref": "#/definitions/CoreTaxon"
                },
                {
                    "properties": {
                        "ancestor_ids": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "ancestry": {
                            "type": "string"
                        },
                        "conservation_status": {
                            "$ref": "#/definitions/RawConservationStatus"
                        },
                        "endemic": {
                            "type": "boolean"
                        },
                        "establishment_means": {
                            "$ref": "#/definitions/EstablishmentMeans"
                        },
                        "introduced": {
                            "type": "boolean"
                        },
                        "native": {
                            "type": "boolean"
                        },
                        "threatened": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ObservationsObserversResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "properties": {
                                    "observation_count": {
                                        "type": "integer"
                                    },
                                    "species_count": {
                                        "type": "integer"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "ObservationsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/Observation"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "ObservationsShowResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/ShowObservation"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "Photo": {
            "properties": {
                "attribution": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_code": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PlacesResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/ShowPlace"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "PointGeoJson": {
            "properties": {
                "coordinates": {
                    "description": "an array of [long, lat]",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PolygonGeoJson": {
            "properties": {
                "coordinates": {
                    "items": {
                        "items": {
                            "description": "an array of [long, lat]",
                            "items": {
                                "format": "double",
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostAnnotation": {
            "properties": {
                "annotation": {
                    "properties": {
                        "controlled_attribute_id": {
                            "type": "integer"
                        },
                        "controlled_value_id": {
                            "type": "integer"
                        },
                        "resource_id": {
                            "type": "integer"
                        },
                        "resource_type": {
                            "enum": [
                                "Observation"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostComment": {
            "properties": {
                "comment": {
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "parent_id": {
                            "type": "integer"
                        },
                        "parent_type": {
                            "enum": [
                                "Observation",
                                "ListedTaxon",
                                "AssessmentSection",
                                "ObservationField",
                                "Post",
                                "TaxonChange"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostFlag": {
            "properties": {
                "flag": {
                    "properties": {
                        "flag": {
                            "enum": [
                                "spam",
                                "inappropriate",
                                "other"
                            ]
                        },
                        "flaggable_id": {
                            "type": "integer"
                        },
                        "flaggable_type": {
                            "enum": [
                                "Comment",
                                "Identification",
                                "Message",
                                "Observation",
                                "Post",
                                "Taxon"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "flag_explanation": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostIdentification": {
            "properties": {
                "identification": {
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "current": {
                            "type": "boolean"
                        },
                        "observation_id": {
                            "type": "integer"
                        },
                        "taxon_id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostMessage": {
            "properties": {
                "message": {
                    "properties": {
                        "body": {
                            "description": "Body of the message",
                            "type": "string"
                        },
                        "subject": {
                            "description": "Subject of the message",
                            "type": "string"
                        },
                        "thread_id": {
                            "description": "Identifier for the thread. Should be blank for new threads,\nbut when replying to an existing message, it should be set to\nthe thread_id of the message being replied to.\n",
                            "type": "integer"
                        },
                        "to_user_id": {
                            "description": "User ID of the recipient",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostObservation": {
            "properties": {
                "observation": {
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "species_guess": {
                            "type": "string"
                        },
                        "taxon_id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostObservationFieldValue": {
            "properties": {
                "observation_field_value": {
                    "properties": {
                        "observation_field_id": {
                            "type": "integer"
                        },
                        "observation_id": {
                            "type": "integer"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostObservationPhoto": {
            "properties": {
                "observation_photo": {
                    "properties": {
                        "observation_id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostObservationVote": {
            "properties": {
                "scope": {
                    "enum": [
                        "needs_id"
                    ]
                },
                "vote": {
                    "enum": [
                        "up",
                        "down"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostPost": {
            "properties": {
                "commit": {
                    "example": "Publish",
                    "type": "string"
                },
                "post": {
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "parent_id": {
                            "type": "number"
                        },
                        "parent_type": {
                            "example": "Project",
                            "type": "string"
                        },
                        "preferred_formatting": {
                            "example": "simple",
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "user_id": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostProjectAdd": {
            "properties": {
                "observation_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PostProjectObservation": {
            "properties": {
                "observation_id": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PostQuality": {
            "properties": {
                "agree": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PostUser": {
            "properties": {
                "icon_delete": {
                    "default": false,
                    "description": "Set to true to remove the current user icon.",
                    "type": "boolean"
                },
                "user": {
                    "properties": {
                        "description": {
                            "description": "User profile description",
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "icon": {
                            "description": "User's profile pic. Requires POST/PUT as a multipart request.\n",
                            "type": "object"
                        },
                        "locale": {
                            "description": "Locale code for language/region localization. See\nhttps://github.com/inaturalist/inaturalist/tree/master/config/locales\nfor available locales. Valid strings can be derived from file\nnames, e.g. `es-MX` from `es-MX.yml`.\n",
                            "type": "string"
                        },
                        "login": {
                            "type": "string"
                        },
                        "name": {
                            "description": "Display name for this user",
                            "type": "string"
                        },
                        "place_id": {
                            "description": "ID of the place for this user, customizes some common names and\ndefault search parameters\n",
                            "type": "integer"
                        },
                        "time_zone": {
                            "description": "Default time zone for the user's observations. See\nhttp://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html\nfor a list of values.\n",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PostUserUpdateSession": {
            "properties": {
                "preferred_taxon_page_ancestors_shown": {
                    "type": "boolean"
                },
                "preferred_taxon_page_place_id": {
                    "type": "integer"
                },
                "preferred_taxon_page_tab": {
                    "type": "string"
                },
                "prefers_hide_obs_show_annotations": {
                    "type": "boolean"
                },
                "prefers_hide_obs_show_copyright": {
                    "type": "boolean"
                },
                "prefers_hide_obs_show_identifiers": {
                    "type": "boolean"
                },
                "prefers_hide_obs_show_observation_fields": {
                    "type": "boolean"
                },
                "prefers_hide_obs_show_projects": {
                    "type": "boolean"
                },
                "prefers_hide_obs_show_quality_metrics": {
                    "type": "boolean"
                },
                "prefers_hide_obs_show_tags": {
                    "type": "boolean"
                },
                "prefers_skip_coarer_id_modal": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PostVote": {
            "properties": {
                "vote": {
                    "enum": [
                        "up",
                        "down"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Project": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProjectMember": {
            "properties": {
                "created_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "observations_count": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "integer"
                },
                "role": {
                    "enum": [
                        "curator",
                        "manager"
                    ],
                    "type": "string"
                },
                "taxa_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "format": "date-time",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "type": "object"
        },
        "ProjectMembersResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/ProjectMember"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "ProjectsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/Project"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "PutFlag": {
            "properties": {
                "flag": {
                    "properties": {
                        "resolved": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RawConservationStatus": {
            "properties": {
                "authority": {
                    "description": "Organization that declared this status\n",
                    "type": "string"
                },
                "geoprivacy": {
                    "description": "Default geoprivacy for observations of this taxon in the status's place.\n",
                    "type": "string"
                },
                "iucn": {
                    "description": "Coded value representing the equivalent IUCN status. Mappings:\nNOT_EVALUATED = 0, DATA_DEFICIENT = 5, LEAST_CONCERN = 10,\nNEAR_THREATENED = 20, VULNERABLE = 30, ENDANGERED = 40,\nCRITICALLY_ENDANGERED = 50, EXTINCT_IN_THE_WILD = 60, EXTINCT = 70\n",
                    "type": "integer"
                },
                "source_id": {
                    "description": "Identifier for the iNat source record associated with this status,\nretrievable via https://www.inaturalist.org/sources/:id.json\n(this endpoint is not a part of our public API and is thus subject to\nchange or removal)\n",
                    "type": "integer"
                },
                "status": {
                    "description": "Body of the status, often coded, particularly when the status comes\nfrom the IUCN or NatureServe. Consult the authority and/or the\nstatus URL for details about the meanings of codes.\n",
                    "type": "string"
                },
                "status_name": {
                    "description": "Human-readable name of the status if it was coded.\n",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ShowObservation": {
            "allOf": [
                {
                    "$ref": "#/definitions/Observation"
                },
                {
                    "properties": {
                        "faves": {
                            "items": {
                                "$ref": "#/definitions/Fave"
                            },
                            "type": "array"
                        },
                        "identifications": {
                            "items": {
                                "$ref": "#/definitions/Identification"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ShowPlace": {
            "allOf": [
                {
                    "$ref": "#/definitions/CorePlace"
                },
                {
                    "properties": {
                        "admin_level": {
                            "type": "integer"
                        },
                        "ancestor_place_ids": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "bbox_area": {
                            "format": "double",
                            "type": "number"
                        },
                        "geometry_geojson": {
                            "$ref": "#/definitions/PolygonGeoJson"
                        },
                        "location": {
                            "description": "in the format \"lat,lng\"",
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "place_type": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ShowTaxon": {
            "allOf": [
                {
                    "$ref": "#/definitions/CoreTaxon"
                },
                {
                    "properties": {
                        "ancestor_ids": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "colors": {
                            "items": {
                                "$ref": "#/definitions/Color"
                            },
                            "type": "array"
                        },
                        "conservation_status": {
                            "$ref": "#/definitions/ConservationStatus"
                        },
                        "conservation_statuses": {
                            "items": {
                                "$ref": "#/definitions/TaxonConservationStatus"
                            },
                            "type": "array"
                        },
                        "default_photo": {
                            "$ref": "#/definitions/TaxonPhoto"
                        },
                        "establishment_means": {
                            "$ref": "#/definitions/EstablishmentMeans"
                        },
                        "observations_count": {
                            "type": "integer"
                        },
                        "preferred_establishment_means": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "Sound": {
            "properties": {
                "attribution": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_code": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SpeciesCountsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "properties": {
                                    "count": {
                                        "type": "integer"
                                    },
                                    "taxon": {
                                        "$ref": "#/definitions/ShowTaxon"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "TaxaAutocompleteResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/AutocompleteTaxon"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "TaxaShowResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "$ref": "#/definitions/ShowTaxon"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        },
        "TaxonConservationStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/RawConservationStatus"
                },
                {
                    "properties": {
                        "place": {
                            "$ref": "#/definitions/CorePlace"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TaxonPhoto": {
            "allOf": [
                {
                    "$ref": "#/definitions/Photo"
                },
                {
                    "properties": {
                        "medium_url": {
                            "type": "string"
                        },
                        "square_url": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "UTFGridResponse": {
            "properties": {
                "data": {
                    "type": "object"
                },
                "grid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "keys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "UpdateProjectObservation": {
            "properties": {
                "project_observation": {
                    "properties": {
                        "observation_id": {
                            "type": "integer"
                        },
                        "prefers_curator_coordinate_access": {
                            "type": "boolean"
                        },
                        "project_id": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "User": {
            "properties": {
                "icon": {
                    "type": "string"
                },
                "icon_content_type": {
                    "type": "string"
                },
                "icon_file_name": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserCountsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "properties": {
                        "results": {
                            "items": {
                                "properties": {
                                    "count": {
                                        "type": "integer"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "results"
                    ]
                }
            ]
        }
    },
    "info": {
        "description": "# https://api.inaturalist.org/v1/\n\n[iNaturalist](https://www.inaturalist.org/) is a global community of\nnaturalists, scientists, and members of the public sharing over a million\nwildlife sightings to teach one another about the natural world while\ncreating high quality citizen science data for science and conservation.\n\nThese API methods return data in JSON/JSONP and PNG response formats. They\nare meant to supplement the existing [iNaturalist\nAPI](https://www.inaturalist.org/pages/api+reference), implemented in Ruby\non Rails, which has more functionality and supports more write operations,\nbut tends to be slower and have less consistent response formats. Visit our\n[developers page](https://www.inaturalist.org/pages/developers) for more\ninformation. Write operations that expect and return JSON describe a single\n`body` parameter that represents the request body, which should be specified\nas JSON. See the \"Model\" of each body parameter for attributes that we\naccept in these JSON objects.\n\nMultiple values for a single URL parameter should be separated by commas,\ne.g. `taxon_id=1,2,3`.\n\nMap tiles are generated using the\n[node-mapnik](https://github.com/mapnik/node-mapnik) library, following the\nXYZ map tiling scheme. The \"Observation Tile\" methods accept nearly all the\nparameters of the observation search APIs, and will generate map tiles\nreflecting the same observations returned by searches. These\n\"Observation Tile\" methods have corresponding\n[UTFGrid](https://github.com/mapbox/utfgrid-spec) JSON\nresponses which return information needed to make interactive maps.\n\nAuthentication in the Node API is handled via JSON Web Tokens (JWT). To\nobtain one, make an [OAuth-authenticated\nrequest](http://www.inaturalist.org/pages/api+reference#auth) to\nhttps://www.inaturalist.org/users/api_token. Each JWT will expire after 24\nhours. Authentication required for all PUT and POST requests. Some GET\nrequests will also include private information like hidden coordinates if\nthe authenticated user has permission to view them.\n\niNaturalist Website: https://www.inaturalist.org/\n\nOpen Source Software: https://github.com/inaturalist/\n\n## Terms of Use\n\nUse of this API is subject to the iNaturalist\n[Terms of Service](https://www.inaturalist.org/terms) and\n[Privacy Policy](https://www.inaturalist.org/privacy). We will block any\nuse of our API that violates our Terms or Privacy Policy without notice.\nThe API is intended to support application development, not data scraping.\nFor pre- generated data exports, see\nhttps://www.inaturalist.org/pages/developers.\n\nPlease note that we throttle API usage to a max of 100 requests per minute,\nthough we ask that you try to keep it to 60 requests per minute or lower,\nand to keep under 10,000 requests per day. If we notice usage that has\nserious impact on our performance we may institute blocks without\nnotification.\n\nTerms of Service: https://www.inaturalist.org/terms\n\nPrivacy Policy: https://www.inaturalist.org/privacy\n",
        "title": "iNaturalist API",
        "version": "1.3.0"
    },
    "parameters": {
        "acc": {
            "description": "Whether or not positional accuracy / coordinate uncertainty has been specified",
            "in": "query",
            "name": "acc",
            "type": "boolean"
        },
        "acc_above": {
            "description": "Must have a positional accuracy above this value (meters)",
            "in": "query",
            "name": "acc_above",
            "type": "string"
        },
        "acc_below": {
            "description": "Must have a positional accuracy below this value (meters)",
            "in": "query",
            "name": "acc_below",
            "type": "string"
        },
        "acc_below_or_unknown": {
            "description": "Positional accuracy must be below this value (in meters) or be unknown",
            "in": "query",
            "name": "acc_below_or_unknown",
            "type": "string"
        },
        "all_names": {
            "description": "Include all taxon names in the response",
            "in": "query",
            "name": "all_names",
            "type": "boolean"
        },
        "annotation_path_id": {
            "description": "ID or UUID of the annotation",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
        },
        "annotation_user_id": {
            "description": "Must have an annotation created by this user\n",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "annotation_user_id",
            "type": "array"
        },
        "apply_project_rules_for": {
            "description": "Must match the rules of the project with this ID or slug",
            "in": "query",
            "name": "apply_project_rules_for",
            "type": "string"
        },
        "associated_place_id": {
            "description": "Must be associated with this place",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "place_id",
            "type": "array"
        },
        "autocomplete_project_id": {
            "description": "Only show users with memberships to this project",
            "in": "query",
            "name": "project_id",
            "type": "integer"
        },
        "autocomplete_q": {
            "description": "Name must begin with this value",
            "in": "query",
            "name": "q",
            "required": true,
            "type": "string"
        },
        "autocomplete_q_not_required": {
            "description": "Name must begin with this value",
            "in": "query",
            "name": "q",
            "type": "string"
        },
        "captive": {
            "description": "Captive or cultivated observations",
            "in": "query",
            "name": "captive",
            "type": "boolean"
        },
        "created_after": {
            "description": "Must be created at or after this time",
            "format": "date-time",
            "in": "query",
            "name": "created_after",
            "type": "string"
        },
        "created_d1": {
            "description": "Must be created at or after this time",
            "format": "date-time",
            "in": "query",
            "name": "created_d1",
            "type": "string"
        },
        "created_d2": {
            "description": "Must be created at or before this time",
            "format": "date-time",
            "in": "query",
            "name": "created_d2",
            "type": "string"
        },
        "created_day": {
            "description": "Must be created within this day of the month",
            "in": "query",
            "items": {
                "type": "string"
            },
            "maximum": 31,
            "minimum": 1,
            "name": "created_day",
            "type": "array"
        },
        "created_month": {
            "description": "Must be created within this month",
            "in": "query",
            "items": {
                "type": "string"
            },
            "maximum": 12,
            "minimum": 1,
            "name": "created_month",
            "type": "array"
        },
        "created_on": {
            "description": "Must be created on this date",
            "format": "date",
            "in": "query",
            "name": "created_on",
            "type": "string"
        },
        "created_year": {
            "description": "Must be created within this year",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "created_year",
            "type": "array"
        },
        "cs": {
            "description": "Taxon must have this conservation status code. If\nthe `place_id` parameter is also specified, this will only consider\nstatuses specific to that place\n",
            "in": "query",
            "name": "cs",
            "type": "string"
        },
        "csa": {
            "description": "Taxon must have a conservation status from this authority. If\nthe `place_id` parameter is also specified, this will only consider\nstatuses specific to that place\n",
            "in": "query",
            "name": "csa",
            "type": "string"
        },
        "csi": {
            "description": "Taxon must have this IUCN conservation status. If\nthe `place_id` parameter is also specified, this will only consider\nstatuses specific to that place\n",
            "enum": [
                "LC",
                "NT",
                "VU",
                "EN",
                "CR",
                "EW",
                "EX"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "csi",
            "type": "array"
        },
        "d1": {
            "description": "Must be observed on or after this date",
            "format": "date",
            "in": "query",
            "name": "d1",
            "type": "string"
        },
        "d2": {
            "description": "Must be observed on or before this date",
            "format": "date",
            "in": "query",
            "name": "d2",
            "type": "string"
        },
        "date_field": {
            "default": "observed",
            "description": "Histogram basis: when the observation was created or observed\n",
            "enum": [
                "created",
                "observed"
            ],
            "in": "query",
            "name": "date_field",
            "required": false,
            "type": "string"
        },
        "day": {
            "description": "Must be observed within this day of the month",
            "in": "query",
            "items": {
                "type": "string"
            },
            "maximum": 31,
            "minimum": 1,
            "name": "day",
            "type": "array"
        },
        "endemic": {
            "description": "Observations whose taxa are endemic to their location",
            "in": "query",
            "name": "endemic",
            "type": "boolean"
        },
        "featured": {
            "description": "Must be marked featured for the relevant site",
            "enum": [
                true
            ],
            "in": "query",
            "name": "featured",
            "type": "string"
        },
        "geo": {
            "description": "Observations that are georeferenced",
            "in": "query",
            "name": "geo",
            "type": "boolean"
        },
        "geoprivacy": {
            "description": "Must have this geoprivacy setting",
            "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "geoprivacy",
            "type": "array"
        },
        "has_params": {
            "description": "Must have search parameter requirements",
            "in": "query",
            "name": "has_params",
            "type": "boolean"
        },
        "has_posts": {
            "description": "Must have posts",
            "in": "query",
            "name": "has_posts",
            "type": "boolean"
        },
        "hrank": {
            "description": "Taxon must have this rank or lower",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "name": "hrank",
            "type": "string"
        },
        "iconic_taxa": {
            "description": "Taxon must by within this iconic taxon",
            "enum": [
                "Actinopterygii",
                "Animalia",
                "Amphibia",
                "Arachnida",
                "Aves",
                "Chromista",
                "Fungi",
                "Insecta",
                "Mammalia",
                "Mollusca",
                "Reptilia",
                "Plantae",
                "Protozoa",
                "unknown"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "iconic_taxa",
            "type": "array"
        },
        "id": {
            "description": "Must have this ID",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "id",
            "type": "array"
        },
        "id_above": {
            "description": "Must have an ID above this value",
            "in": "query",
            "name": "id_above",
            "type": "string"
        },
        "id_below": {
            "description": "Must have an ID below this value",
            "in": "query",
            "name": "id_below",
            "type": "string"
        },
        "id_please": {
            "description": "Observations with the deprecated `ID, Please!` flag. Note that this will return observations, but that this attribute is no longer used.",
            "in": "query",
            "name": "id_please",
            "type": "boolean"
        },
        "ident_user_id": {
            "description": "Observations identified by a particular user",
            "in": "query",
            "name": "ident_user_id",
            "type": "integer"
        },
        "identifications": {
            "description": "Identifications must meet these criteria",
            "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
            ],
            "in": "query",
            "name": "identifications",
            "type": "string"
        },
        "identified": {
            "description": "Observations that have community identifications",
            "in": "query",
            "name": "identified",
            "type": "boolean"
        },
        "ids_category": {
            "description": "Type of identification",
            "enum": [
                "improving",
                "supporting",
                "leading",
                "maverick"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "category",
            "type": "array"
        },
        "ids_current": {
            "default": true,
            "description": "Most recent ID on a observation by a user",
            "enum": [
                true,
                false,
                "any"
            ],
            "in": "query",
            "name": "current",
            "type": "boolean"
        },
        "ids_current_taxon": {
            "description": "ID's taxon is the same it's observation's taxon",
            "in": "query",
            "name": "current_taxon",
            "type": "boolean"
        },
        "ids_d1": {
            "description": "ID created on or after this time",
            "format": "date",
            "in": "query",
            "name": "d1",
            "type": "string"
        },
        "ids_d2": {
            "description": "ID created on or before this time",
            "format": "date",
            "in": "query",
            "name": "d2",
            "type": "string"
        },
        "ids_hrank": {
            "description": "ID taxon must have this rank or lower",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "name": "hrank",
            "type": "string"
        },
        "ids_iconic_taxon_id": {
            "description": "ID iconic taxon ID",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "iconic_taxon_id",
            "type": "array"
        },
        "ids_id": {
            "description": "Identification ID",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "id",
            "type": "array"
        },
        "ids_is_change": {
            "description": "ID was created as a results of a taxon change",
            "in": "query",
            "name": "is_change",
            "type": "boolean"
        },
        "ids_lrank": {
            "description": "ID taxon must have this rank or higher",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "name": "lrank",
            "type": "string"
        },
        "ids_observation_created_d1": {
            "description": "Observation created on or after this date",
            "format": "date",
            "in": "query",
            "name": "observation_created_d1",
            "type": "string"
        },
        "ids_observation_created_d2": {
            "description": "Observation created on or before this date",
            "format": "date",
            "in": "query",
            "name": "observation_created_d2",
            "type": "string"
        },
        "ids_observation_hrank": {
            "description": "Observation taxon must have this rank or lower",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "name": "observation_hrank",
            "type": "string"
        },
        "ids_observation_iconic_taxon_id": {
            "description": "Observation iconic taxon ID",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "observation_iconic_taxon_id",
            "type": "array"
        },
        "ids_observation_lrank": {
            "description": "Observation taxon must have this rank or higher",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "name": "observation_lrank",
            "type": "string"
        },
        "ids_observation_rank": {
            "description": "Observation's taxon must have this rank",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "observation_rank",
            "type": "array"
        },
        "ids_observation_taxon_active": {
            "description": "Observation's taxon is currently an active taxon",
            "in": "query",
            "name": "observation_taxon_active",
            "type": "boolean"
        },
        "ids_observation_taxon_id": {
            "description": "Observation taxa must match the given taxa or their descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "observation_taxon_id",
            "type": "array"
        },
        "ids_observed_d1": {
            "description": "Observation observed on or after this date",
            "format": "date",
            "in": "query",
            "name": "observed_d1",
            "type": "string"
        },
        "ids_observed_d2": {
            "description": "Observation observed on or before this date",
            "format": "date",
            "in": "query",
            "name": "observed_d2",
            "type": "string"
        },
        "ids_order_by": {
            "default": "created_at",
            "description": "Sort field",
            "enum": [
                "created_at",
                "id"
            ],
            "in": "query",
            "name": "order_by",
            "type": "string"
        },
        "ids_own_observation": {
            "description": "ID was added by the observer",
            "in": "query",
            "name": "own_observation",
            "type": "boolean"
        },
        "ids_place_id": {
            "description": "Observation must occur in this place",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "place_id",
            "type": "array"
        },
        "ids_quality_grade": {
            "description": "Observation must have this quality grade",
            "enum": [
                "casual",
                "needs_id",
                "research"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "quality_grade",
            "type": "array"
        },
        "ids_rank": {
            "description": "ID's taxon must have this rank",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "rank",
            "type": "array"
        },
        "ids_taxon_active": {
            "description": "ID's taxon is currently an active taxon",
            "in": "query",
            "name": "taxon_active",
            "type": "boolean"
        },
        "ids_taxon_id": {
            "description": "ID taxa must match the given taxa or their descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "taxon_id",
            "type": "array"
        },
        "ids_user_id": {
            "description": "Identifier must have this user ID",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "minimum": 1,
            "name": "user_id",
            "type": "array"
        },
        "ids_user_login": {
            "description": "Identifier must have this login",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "user_login",
            "type": "array"
        },
        "ids_without_observation_taxon_id": {
            "description": "Exclude IDs of observations of these taxa and their descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "without_observation_taxon_id",
            "type": "array"
        },
        "ids_without_taxon_id": {
            "description": "Exclude IDs of these taxa and their descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "without_taxon_id",
            "type": "array"
        },
        "interval": {
            "default": "month_of_year",
            "description": "Time interval for histogram, with groups starting on or contained within\nthe group value. The year, month, week, day, and hour options will set\ndefault values for `d1` or `created_d1` depending on the value of\n`date_field`, to limit the number of groups returned. You can override\nthose values if you want data from a longer or shorter time span. The\n`hour` interval only works with `date_field=created`, and this you\nshould filter dates with `created_d[1,2]`\n",
            "enum": [
                "year",
                "month",
                "week",
                "day",
                "hour",
                "month_of_year",
                "week_of_year"
            ],
            "in": "query",
            "name": "interval",
            "required": false,
            "type": "string"
        },
        "introduced": {
            "description": "Observations whose taxa are introduced in their location\n",
            "in": "query",
            "name": "introduced",
            "type": "boolean"
        },
        "lat": {
            "description": "Must be within a {`radius`} kilometer circle around this lat/lng\n(*lat, *lng, radius)\n",
            "format": "double",
            "in": "query",
            "name": "lat",
            "type": "number"
        },
        "license": {
            "description": "Observation must have this license",
            "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "license",
            "type": "array"
        },
        "licensed": {
            "description": "License attribute of an observation must not be null",
            "in": "query",
            "name": "licensed",
            "type": "boolean"
        },
        "list_id": {
            "description": "Taxon must be in the list with this ID",
            "in": "query",
            "name": "list_id",
            "type": "integer"
        },
        "lng": {
            "description": "Must be within a {`radius`} kilometer circle around this lat/lng\n(*lat, *lng, radius)\n",
            "format": "double",
            "in": "query",
            "name": "lng",
            "type": "number"
        },
        "locale": {
            "description": "Locale preference for taxon common names\n",
            "in": "query",
            "name": "locale",
            "type": "string"
        },
        "lrank": {
            "description": "Taxon must have this rank or higher",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "name": "lrank",
            "type": "string"
        },
        "mappable": {
            "description": "Observations that show on map tiles",
            "in": "query",
            "name": "mappable",
            "type": "boolean"
        },
        "member_id": {
            "description": "Project must have member with this user ID",
            "in": "query",
            "name": "member_id",
            "type": "integer"
        },
        "month": {
            "description": "Must be observed within this month",
            "in": "query",
            "items": {
                "type": "string"
            },
            "maximum": 12,
            "minimum": 1,
            "name": "month",
            "type": "array"
        },
        "native": {
            "description": "Observations whose taxa are native to their location",
            "in": "query",
            "name": "native",
            "type": "boolean"
        },
        "nelat": {
            "description": "Must be within this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "nelat",
            "type": "number"
        },
        "nelat_required": {
            "description": "Must be nearby this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "nelat",
            "required": true,
            "type": "number"
        },
        "nelng": {
            "description": "Must be within this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "nelng",
            "type": "number"
        },
        "nelng_required": {
            "description": "Must be nearby this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "nelng",
            "required": true,
            "type": "number"
        },
        "not_id": {
            "description": "Must not have this ID",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "not_id",
            "type": "array"
        },
        "not_in_project": {
            "description": "Must not be in the project with this ID or slug",
            "in": "query",
            "name": "not_in_project",
            "type": "string"
        },
        "not_matching_project_rules_for": {
            "description": "Must not match the rules of the project with this ID or slug",
            "in": "query",
            "name": "not_matching_project_rules_for",
            "type": "string"
        },
        "noteworthy": {
            "description": "Must be marked noteworthy for the relevant site",
            "enum": [
                true
            ],
            "in": "query",
            "name": "noteworthy",
            "type": "string"
        },
        "observation_accuracy_experiment_id": {
            "description": "Must included in this observation accuracy experiment",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "observation_accuracy_experiment_id",
            "type": "array"
        },
        "observations_by": {
            "description": "Only show updates on observations owned by the currently authenticated\nuser or on observations the authenticated user is following but does not\nown.\n",
            "enum": [
                "owner",
                "following"
            ],
            "in": "query",
            "name": "observations_by",
            "type": "string"
        },
        "observed_on": {
            "description": "Must be observed on this date",
            "format": "date",
            "in": "query",
            "name": "observed_on",
            "type": "string"
        },
        "ofv_datatype": {
            "description": "Must have an observation field value with this datatype",
            "in": "query",
            "items": {
                "type": "string"
            },
            "maximum": 31,
            "minimum": 1,
            "name": "ofv_datatype",
            "type": "array"
        },
        "only_id": {
            "description": "Return only the record IDs",
            "in": "query",
            "name": "only_id",
            "type": "boolean"
        },
        "order": {
            "default": "desc",
            "description": "Sort order",
            "enum": [
                "desc",
                "asc"
            ],
            "in": "query",
            "name": "order",
            "type": "string"
        },
        "order_by": {
            "default": "created_at",
            "description": "Sort field",
            "enum": [
                "observed_on",
                "species_guess",
                "votes",
                "id",
                "created_at"
            ],
            "in": "query",
            "name": "order_by",
            "type": "string"
        },
        "out_of_range": {
            "description": "Observations whose taxa are outside their known ranges",
            "in": "query",
            "name": "out_of_range",
            "type": "boolean"
        },
        "page": {
            "description": "Pagination `page` number",
            "in": "query",
            "name": "page",
            "type": "string"
        },
        "parent_id": {
            "description": "Taxon's parent must have this ID",
            "in": "query",
            "name": "parent_id",
            "type": "integer"
        },
        "path_id": {
            "description": "ID of the record",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
        },
        "path_metric": {
            "description": "Data quality category",
            "enum": [
                "date",
                "location",
                "wild"
            ],
            "in": "path",
            "name": "metric",
            "required": true,
            "type": "string"
        },
        "path_multi_id": {
            "description": "Must have this ID",
            "in": "path",
            "items": {
                "type": "integer"
            },
            "name": "id",
            "required": true,
            "type": "array"
        },
        "path_multi_id_or_slug": {
            "description": "Must have this ID or slug",
            "in": "path",
            "items": {
                "type": "string"
            },
            "name": "id",
            "required": true,
            "type": "array"
        },
        "path_place_id": {
            "description": "Place ID",
            "in": "path",
            "name": "place_id",
            "required": true,
            "type": "integer"
        },
        "path_taxon_id": {
            "description": "Taxon ID",
            "in": "path",
            "name": "taxon_id",
            "required": true,
            "type": "integer"
        },
        "pcid": {
            "description": "Observations identified by the curator of a project. If\nthe `project_id` parameter is also specified, this will only consider\nobservations identified by curators of the specified project(s)\n",
            "in": "query",
            "name": "pcid",
            "type": "boolean"
        },
        "per_page": {
            "description": "Number of results to return in a `page`. The maximum value is generally\n200 unless otherwise noted\n",
            "in": "query",
            "name": "per_page",
            "type": "string"
        },
        "per_page_species_counts": {
            "description": "Number of results to return in a `page`. The maximum value is 500\n",
            "in": "query",
            "name": "per_page",
            "type": "string"
        },
        "photo_license": {
            "description": "Must have at least one photo with this license",
            "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "photo_license",
            "type": "array"
        },
        "photo_licensed": {
            "description": "License attribute of at least one photo of an observation must not be null",
            "in": "query",
            "name": "photo_licensed",
            "type": "boolean"
        },
        "photos": {
            "description": "Observations with photos",
            "in": "query",
            "name": "photos",
            "type": "boolean"
        },
        "place_id": {
            "description": "Must be observed within the place with this ID",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "place_id",
            "type": "array"
        },
        "popular": {
            "description": "Observations that have been favorited by at least one user\n",
            "in": "query",
            "name": "popular",
            "type": "boolean"
        },
        "posts_login": {
            "description": "Return posts by this user",
            "in": "query",
            "name": "login",
            "type": "string"
        },
        "posts_project_id": {
            "description": "Return posts from this project",
            "in": "query",
            "name": "project_id",
            "type": "integer"
        },
        "preferred_place_id": {
            "description": "Place preference for regional taxon common names\n",
            "in": "query",
            "name": "preferred_place_id",
            "type": "integer"
        },
        "project_id": {
            "description": "Must be added to the project this ID or slug",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "project_id",
            "type": "array"
        },
        "project_type": {
            "description": "Specify the type of project to return\n",
            "enum": [
                "traditional",
                "collection",
                "umbrella"
            ],
            "in": "query",
            "name": "project_type",
            "type": "string"
        },
        "projects_order_by": {
            "description": "Sort field",
            "enum": [
                "recent_posts",
                "created",
                "updated",
                "distance",
                "featured"
            ],
            "in": "query",
            "name": "order_by",
            "type": "string"
        },
        "projects_radius": {
            "description": "Must be within a {`radius`} kilometer circle around this lat/lng\n(*lat, *lng, radius). Defaults to 500km\n",
            "in": "query",
            "name": "radius",
            "type": "string"
        },
        "projects_site_id": {
            "description": "Site ID that applies to `featured` and `noteworthy`. Defaults to the site\nof the authenticated user, or to the main iNaturalist site\nhttps://www.inaturalist.org\n",
            "in": "query",
            "name": "site_id",
            "type": "integer"
        },
        "q": {
            "description": "Search observation properties. Can be combined with `search_on`",
            "in": "query",
            "name": "q",
            "type": "string"
        },
        "quality_grade": {
            "description": "Must have this quality grade",
            "enum": [
                "casual",
                "needs_id",
                "research"
            ],
            "in": "query",
            "name": "quality_grade",
            "type": "string"
        },
        "radius": {
            "description": "Must be within a {`radius`} kilometer circle around this lat/lng\n(*lat, *lng, radius)\n",
            "in": "query",
            "name": "radius",
            "type": "string"
        },
        "rank": {
            "description": "Taxon must have this rank",
            "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "rank",
            "type": "array"
        },
        "rank_level": {
            "description": "Taxon must have this rank level. Some example values are 70 (kingdom),\n60 (phylum), 50 (class), 40 (order), 30 (family), 20 (genus),\n10 (species), 5 (subspecies)\n",
            "in": "query",
            "name": "rank_level",
            "type": "number"
        },
        "reviewed": {
            "description": "Observations have been reviewed by the user with ID equal to\nthe value of the `viewer_id` parameter\n",
            "in": "query",
            "name": "reviewed",
            "type": "boolean"
        },
        "rule_details": {
            "description": "Return more information about project rules, for example return a full\ntaxon object instead of simply an ID\n",
            "enum": [
                true
            ],
            "in": "query",
            "name": "rule_details",
            "type": "string"
        },
        "search_on": {
            "description": "Properties to search on, when combined with `q`.\nSearches across all properties by default\n",
            "enum": [
                "names",
                "tags",
                "description",
                "place"
            ],
            "in": "query",
            "name": "search_on",
            "type": "string"
        },
        "search_q": {
            "description": "Search object properties",
            "in": "query",
            "name": "q",
            "type": "string"
        },
        "since": {
            "description": "Deleted at or after this time",
            "format": "date-time",
            "in": "query",
            "name": "since",
            "required": true,
            "type": "string"
        },
        "site_id": {
            "description": "Must be affiliated with the iNaturalist network website with this ID\n",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "site_id",
            "type": "array"
        },
        "sound_license": {
            "description": "Must have at least one sound with this license",
            "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "sound_license",
            "type": "array"
        },
        "sounds": {
            "description": "Observations with sounds",
            "in": "query",
            "name": "sounds",
            "type": "boolean"
        },
        "sources": {
            "description": "Must be of this type",
            "enum": [
                "places",
                "projects",
                "taxa",
                "users"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "sources",
            "type": "array"
        },
        "swlat": {
            "description": "Must be within this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "swlat",
            "type": "number"
        },
        "swlat_required": {
            "description": "Must be nearby this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "swlat",
            "required": true,
            "type": "number"
        },
        "swlng": {
            "description": "Must be within this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "swlng",
            "type": "number"
        },
        "swlng_required": {
            "description": "Must be nearby this bounding box (*nelat, *nelng, *swlat, *swlng)\n",
            "format": "double",
            "in": "query",
            "name": "swlng",
            "required": true,
            "type": "number"
        },
        "taxa_order_by": {
            "default": "observations_count",
            "description": "Sort field",
            "enum": [
                "id",
                "created_at",
                "observations_count"
            ],
            "in": "query",
            "name": "order_by",
            "type": "string"
        },
        "taxa_taxon_id": {
            "description": "Only show taxa with this ID, or its descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "taxon_id",
            "type": "array"
        },
        "taxon_geoprivacy": {
            "description": "Filter observations by the most conservative geoprivacy applied by a\nconservation status associated with one of the taxa proposed in the\ncurrent identifications.\n",
            "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "taxon_geoprivacy",
            "type": "array"
        },
        "taxon_id": {
            "description": "Only show observations of these taxa and their descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "taxon_id",
            "type": "array"
        },
        "taxon_is_active": {
            "description": "Observations of active taxon concepts\n",
            "in": "query",
            "name": "taxon_is_active",
            "type": "boolean"
        },
        "taxon_name": {
            "description": "Taxon must have a scientific or common name matching this string\n",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "taxon_name",
            "type": "array"
        },
        "term_id": {
            "description": "Must have an annotation using this controlled term ID",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "term_id",
            "type": "array"
        },
        "term_id_or_unknown": {
            "description": "Must be combined with the `term_value_id` or the `without_term_value_id` parameter.\nMust have an annotation using this controlled term ID and associated term value IDs\nor be missing this annotation.\n",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "term_id_or_unknown",
            "type": "array"
        },
        "term_value_id": {
            "description": "Must have an annotation using this controlled value ID. Must be combined\nwith the `term_id` parameter\n",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "term_value_id",
            "type": "array"
        },
        "threatened": {
            "description": "Observations whose taxa are threatened in their location\n",
            "in": "query",
            "name": "threatened",
            "type": "boolean"
        },
        "tile_color": {
            "description": "Primary color to use in tile creation. Accepts common colors by string\n(e.g. `color=blue`), and accepts escaped color HEX codes\n(e.g. `color=%2386a91c`)\n",
            "in": "query",
            "name": "color",
            "type": "string"
        },
        "ttl": {
            "description": "Set the `Cache-Control` HTTP header with this value as `max-age`, in\nseconds. This means subsequent identical requests will be cached on\niNaturalist servers, and commonly within web browsers\n",
            "in": "query",
            "name": "ttl",
            "type": "string"
        },
        "type": {
            "description": "Projects must be of this type",
            "enum": [
                "collection",
                "umbrella"
            ],
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "type",
            "type": "array"
        },
        "unobserved_by_user_id": {
            "description": "Must not be of a taxon previously observed by this user",
            "in": "query",
            "name": "unobserved_by_user_id",
            "type": "integer"
        },
        "updated_since": {
            "description": "Must be updated since this time",
            "in": "query",
            "name": "updated_since",
            "type": "string"
        },
        "user_id": {
            "description": "User must have this ID or login",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "user_id",
            "type": "array"
        },
        "user_login": {
            "description": "User must have this login",
            "in": "query",
            "items": {
                "type": "string"
            },
            "name": "user_login",
            "type": "array"
        },
        "verifiable": {
            "description": "Observations with a `quality_grade` of either `needs_id` or\n`research`. Equivalent to `quality_grade=needs_id,research`\n",
            "in": "query",
            "name": "verifiable",
            "type": "boolean"
        },
        "viewed": {
            "description": "Notification has been viewed by the user before",
            "in": "query",
            "name": "viewed",
            "type": "boolean"
        },
        "viewer_id": {
            "description": "See `reviewed`",
            "in": "query",
            "name": "viewer_id",
            "type": "string"
        },
        "without_taxon_id": {
            "description": "Exclude observations of these taxa and their descendants",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "without_taxon_id",
            "type": "array"
        },
        "without_term_id": {
            "description": "Exclude observations with annotations using this controlled value ID.\n",
            "in": "query",
            "name": "without_term_id",
            "type": "integer"
        },
        "without_term_value_id": {
            "description": "Exclude observations with annotations using this controlled value ID.\nMust be combined with the `term_id` parameter\n",
            "in": "query",
            "items": {
                "type": "integer"
            },
            "name": "without_term_value_id",
            "type": "array"
        },
        "x": {
            "description": "X coordinate in the XYZ tiling scheme. Must be less than 2^zoom",
            "in": "path",
            "minimum": 0,
            "name": "x",
            "required": true,
            "type": "integer"
        },
        "y": {
            "description": "Y coordinate in the XYZ tiling scheme. Must be less than 2^zoom",
            "in": "path",
            "minimum": 0,
            "name": "y",
            "required": true,
            "type": "integer"
        },
        "year": {
            "description": "Must be observed within this year",
            "in": "query",
            "items": {
                "type": "string"
            },
            "minimum": 1,
            "name": "year",
            "type": "array"
        },
        "zoom": {
            "description": "Zoom level. Z coordinate in the XYZ tiling scheme",
            "in": "path",
            "maximum": 21,
            "minimum": 0,
            "name": "zoom",
            "required": true,
            "type": "integer"
        }
    },
    "paths": {
        "/annotations": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create an annotation\n",
                "parameters": [
                    {
                        "description": "Annotation object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostAnnotation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Annotation Create",
                "tags": [
                    "Annotations"
                ]
            }
        },
        "/annotations/{id}": {
            "delete": {
                "description": "Delete an annotation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/annotation_path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Annotation Delete",
                "tags": [
                    "Annotations"
                ]
            }
        },
        "/colored_heatmap/{zoom}/{x}/{y}.grid.json": {
            "get": {
                "description": "Given zero to many of following parameters, returns a JSON file\nfollowing the UTFGrid spec, representing observations matching\nthe search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a UTFGrid\n",
                        "schema": {
                            "$ref": "#/definitions/UTFGridResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Colored Heatmap Tiles UTFGrid",
                "tags": [
                    "UTFGrid"
                ]
            }
        },
        "/colored_heatmap/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Given zero to many of following parameters, returns a PNG image\nrepresenting the matching observations within a map tile, following\nthe XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Colored Heatmap Tiles",
                "tags": [
                    "Observation Tiles"
                ]
            }
        },
        "/comments": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create a comment\n",
                "parameters": [
                    {
                        "description": "Comment object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Comment Create",
                "tags": [
                    "Comments"
                ]
            }
        },
        "/comments/{id}": {
            "delete": {
                "description": "Delete a comment\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Comment Delete",
                "tags": [
                    "Comments"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update a comment\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Comment object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Comment Update",
                "tags": [
                    "Comments"
                ]
            }
        },
        "/controlled_terms": {
            "get": {
                "description": "List all attribute controlled terms\n",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Terms Index",
                "tags": [
                    "Controlled Terms"
                ]
            }
        },
        "/controlled_terms/for_taxon": {
            "get": {
                "description": "Returns attribute controlled terms relevant to a taxon\n",
                "parameters": [
                    {
                        "description": "Filter by this taxon",
                        "in": "query",
                        "minimum": 1,
                        "name": "taxon_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Terms for Taxon",
                "tags": [
                    "Controlled Terms"
                ]
            }
        },
        "/flags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create a flag. To create a custom flag beyond the standard `spam` and\n`inappropriate` flags, set `flag` to `other` and include a `flag_explanation`\n",
                "parameters": [
                    {
                        "description": "Flag object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostFlag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Flag Create",
                "tags": [
                    "Flags"
                ]
            }
        },
        "/flags/{id}": {
            "delete": {
                "description": "Delete a flag\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Flag Delete",
                "tags": [
                    "Flags"
                ]
            },
            "put": {
                "description": "Update a flag. Generally only used to resolve the flag.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PutFlag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Flag Update",
                "tags": [
                    "Flags"
                ]
            }
        },
        "/grid/{zoom}/{x}/{y}.grid.json": {
            "get": {
                "description": "Given zero to many of following parameters, returns a JSON file\nfollowing the UTFGrid spec, representing observations matching\nthe search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a UTFGrid\n",
                        "schema": {
                            "$ref": "#/definitions/UTFGridResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Grid Tiles UTFGrid",
                "tags": [
                    "UTFGrid"
                ]
            }
        },
        "/grid/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Given zero to many of following parameters, returns a PNG image\nrepresenting the matching observations within a map tile, following\nthe XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Grid Tiles",
                "tags": [
                    "Observation Tiles"
                ]
            }
        },
        "/heatmap/{zoom}/{x}/{y}.grid.json": {
            "get": {
                "description": "Given zero to many of following parameters, returns a JSON file\nfollowing the UTFGrid spec, representing observations matching\nthe search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a UTFGrid\n",
                        "schema": {
                            "$ref": "#/definitions/UTFGridResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Heatmap Tiles UTFGrid",
                "tags": [
                    "UTFGrid"
                ]
            }
        },
        "/heatmap/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Given zero to many of following parameters, returns a PNG image\nrepresenting the matching observations within a map tile, following\nthe XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Heatmap Tiles",
                "tags": [
                    "Observation Tiles"
                ]
            }
        },
        "/identifications": {
            "get": {
                "description": "Given zero to many of following parameters, returns identifications\nmatching the search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/ids_current_taxon"
                    },
                    {
                        "$ref": "#/parameters/ids_own_observation"
                    },
                    {
                        "$ref": "#/parameters/ids_is_change"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_id"
                    },
                    {
                        "$ref": "#/parameters/ids_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_user_id"
                    },
                    {
                        "$ref": "#/parameters/ids_user_login"
                    },
                    {
                        "$ref": "#/parameters/ids_current"
                    },
                    {
                        "$ref": "#/parameters/ids_category"
                    },
                    {
                        "$ref": "#/parameters/ids_place_id"
                    },
                    {
                        "$ref": "#/parameters/ids_quality_grade"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_without_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d2"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/ids_order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Identification Search",
                "tags": [
                    "Identifications"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create an identification",
                "parameters": [
                    {
                        "description": "Identification object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostIdentification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Identification Create",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/categories": {
            "get": {
                "description": "Given zero to many of following parameters, return counts of the\ncategories of identifications matching the search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/ids_current_taxon"
                    },
                    {
                        "$ref": "#/parameters/ids_own_observation"
                    },
                    {
                        "$ref": "#/parameters/ids_is_change"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_id"
                    },
                    {
                        "$ref": "#/parameters/ids_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_user_id"
                    },
                    {
                        "$ref": "#/parameters/ids_user_login"
                    },
                    {
                        "$ref": "#/parameters/ids_current"
                    },
                    {
                        "$ref": "#/parameters/ids_category"
                    },
                    {
                        "$ref": "#/parameters/ids_place_id"
                    },
                    {
                        "$ref": "#/parameters/ids_quality_grade"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_without_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d2"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/ids_order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Identification Categories",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/identifiers": {
            "get": {
                "description": "Given zero to many of following parameters, returns creators of\nidentifications matching the search criteria and the count of\nmatching identifications, ordered by count descending. A\nmaximum of 500 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/ids_current_taxon"
                    },
                    {
                        "$ref": "#/parameters/ids_own_observation"
                    },
                    {
                        "$ref": "#/parameters/ids_is_change"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_id"
                    },
                    {
                        "$ref": "#/parameters/ids_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_user_id"
                    },
                    {
                        "$ref": "#/parameters/ids_user_login"
                    },
                    {
                        "$ref": "#/parameters/ids_current"
                    },
                    {
                        "$ref": "#/parameters/ids_category"
                    },
                    {
                        "$ref": "#/parameters/ids_place_id"
                    },
                    {
                        "$ref": "#/parameters/ids_quality_grade"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_without_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d2"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/ids_order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of identifiers\n",
                        "schema": {
                            "$ref": "#/definitions/UserCountsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Identification Identifiers",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/observers": {
            "get": {
                "description": "Given zero to many of following parameters, returns creators of\nobservations of identifications matching the search criteria and\nthe count of matching observations, ordered by count descending\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/ids_current_taxon"
                    },
                    {
                        "$ref": "#/parameters/ids_own_observation"
                    },
                    {
                        "$ref": "#/parameters/ids_is_change"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_id"
                    },
                    {
                        "$ref": "#/parameters/ids_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_user_id"
                    },
                    {
                        "$ref": "#/parameters/ids_user_login"
                    },
                    {
                        "$ref": "#/parameters/ids_current"
                    },
                    {
                        "$ref": "#/parameters/ids_category"
                    },
                    {
                        "$ref": "#/parameters/ids_place_id"
                    },
                    {
                        "$ref": "#/parameters/ids_quality_grade"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_without_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d2"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/ids_order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of observers\n",
                        "schema": {
                            "$ref": "#/definitions/UserCountsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Identification Observers",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/recent_taxa": {
            "get": {
                "description": "Returns an array of objects each containing an identification and a\ntaxon. Returns IDs representing the earliest occurrence of taxa\nassociated with identifications in the filtered set of results\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/ids_current_taxon"
                    },
                    {
                        "$ref": "#/parameters/ids_own_observation"
                    },
                    {
                        "$ref": "#/parameters/ids_is_change"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_id"
                    },
                    {
                        "$ref": "#/parameters/ids_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_user_id"
                    },
                    {
                        "$ref": "#/parameters/ids_user_login"
                    },
                    {
                        "$ref": "#/parameters/ids_current"
                    },
                    {
                        "$ref": "#/parameters/ids_category"
                    },
                    {
                        "$ref": "#/parameters/ids_place_id"
                    },
                    {
                        "$ref": "#/parameters/ids_quality_grade"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_without_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d2"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/ids_order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Identification Recent Taxa",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/similar_species": {
            "get": {
                "description": "Returns species attached to IDs of observations of this taxon, or\nattached to observations identified as this species, ordered by combined\nfrequency descending. This will only return species in the same iconic\ntaxon, and will never return descendants of the chosen taxon\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "description": "Only show observations of these taxa and their descendants",
                        "in": "query",
                        "minimum": 1,
                        "name": "taxon_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Identification Similar Species",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/species_counts": {
            "get": {
                "description": "Given zero to many of following parameters, returns `leaf taxa`\nassociated with identifications matching the search criteria and the\ncount of identifications they are associated with, ordered by count\ndescending. `Leaf taxa` are the leaves of the taxonomic tree containing\nonly the taxa associated with observations matching the search criteria.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/ids_current_taxon"
                    },
                    {
                        "$ref": "#/parameters/ids_own_observation"
                    },
                    {
                        "$ref": "#/parameters/ids_is_change"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_active"
                    },
                    {
                        "$ref": "#/parameters/ids_id"
                    },
                    {
                        "$ref": "#/parameters/ids_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_rank"
                    },
                    {
                        "$ref": "#/parameters/ids_user_id"
                    },
                    {
                        "$ref": "#/parameters/ids_user_login"
                    },
                    {
                        "$ref": "#/parameters/ids_current"
                    },
                    {
                        "$ref": "#/parameters/ids_category"
                    },
                    {
                        "$ref": "#/parameters/ids_place_id"
                    },
                    {
                        "$ref": "#/parameters/ids_quality_grade"
                    },
                    {
                        "$ref": "#/parameters/ids_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_iconic_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_lrank"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_hrank"
                    },
                    {
                        "$ref": "#/parameters/ids_without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_without_observation_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/ids_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observation_created_d2"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d1"
                    },
                    {
                        "$ref": "#/parameters/ids_observed_d2"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/ids_order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    },
                    {
                        "default": "identification",
                        "description": "Source of the taxon for counting",
                        "enum": [
                            "identification",
                            "observation"
                        ],
                        "in": "query",
                        "name": "taxon_of",
                        "type": "string"
                    },
                    {
                        "default": "desc",
                        "description": "Sort order",
                        "enum": [
                            "desc",
                            "asc"
                        ],
                        "in": "query",
                        "name": "order",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of taxa\n",
                        "schema": {
                            "$ref": "#/definitions/SpeciesCountsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Identification Species Counts",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/identifications/{id}": {
            "delete": {
                "description": "Delete an identification. See description of `PUT /identifications/{id}\nfor notes on withdrawing and restoring identifications.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Identification Delete",
                "tags": [
                    "Identifications"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Given an ID, or an array of IDs in comma-delimited format, returns\ncorresponding identifications. A maximum of 30 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_multi_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Identification Details",
                "tags": [
                    "Identifications"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update an identification. Note that to \"withdraw\" an observation you\nsend a `PUT` request to this endpoint and set the `current`\nattribute to false. To \"restore\" it you do the same but set\n`current` to `true`. Only one identification by a given user can be\n`current` for a given observation, so if you \"restore\" one all the other\nidentifications by the authenticated user for the given observation will\nbe withdrawn.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Identification object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostIdentification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Identification Update",
                "tags": [
                    "Identifications"
                ]
            }
        },
        "/messages": {
            "get": {
                "description": "Show the user's inbox or sent box",
                "parameters": [
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "default": "inbox",
                        "description": "Whether to view messages the user has received (default) or messages the user has sent",
                        "enum": [
                            "inbox",
                            "sent",
                            "any"
                        ],
                        "in": "query",
                        "name": "box",
                        "type": "string"
                    },
                    {
                        "description": "Search query for subject and body",
                        "in": "query",
                        "name": "q",
                        "type": "string"
                    },
                    {
                        "description": "User ID or username of correspondent to filter by",
                        "in": "query",
                        "name": "user_id",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Groups results by `thread_id`, only shows the latest message per\nthread, and includes a `thread_messages_count` attribute showing the\ntotal number of messages in that thread. Note that this will not\nwork with the `q` param, and it probably should only be used with\n`box=any` because the `thread_messages_count` will be inaccurate when\nyou restrict it to `inbox` or `sent`.\n",
                        "in": "query",
                        "name": "threads",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Returns an object with metadata and an array of messages\n",
                        "schema": {
                            "$ref": "#/definitions/MessagesResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Retrieve messages for the authenticated user. This does not mark them as read.",
                "tags": [
                    "Messages"
                ]
            },
            "post": {
                "description": "Create and deliver a new message to another user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the message just created\n",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Create a new message",
                "tags": [
                    "Messages"
                ]
            }
        },
        "/messages/unread": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Number of unread messages",
                        "schema": {
                            "properties": {
                                "count": {
                                    "description": "Number of unread messages",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Gets a count of messages the authenticated user has not read",
                "tags": [
                    "Messages"
                ]
            }
        },
        "/messages/{id}": {
            "delete": {
                "description": "This will all of the authenticated user's copies of the messages in tha\nthread to which the specified message belongs.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No return data, 200 just means deletion was successful\n"
                    },
                    "404": {
                        "description": "Specified message doesn't exist\n"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Delete a message / thread",
                "tags": [
                    "Messages"
                ]
            },
            "get": {
                "description": "Retrieves all messages in the thread the specified message belongs to\nand marks them all as read.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of messages\n",
                        "schema": {
                            "properties": {
                                "flaggable_message_id": {
                                    "description": "Identifier for the message that should be flagged if the user\nchooses to flag this thread\n",
                                    "type": "integer"
                                },
                                "reply_to_user": {
                                    "$ref": "#/definitions/User",
                                    "description": "User to reply to"
                                },
                                "results": {
                                    "items": {
                                        "$ref": "#/definitions/Message"
                                    },
                                    "type": "array"
                                },
                                "thread_id": {
                                    "description": "Identifier for this thread",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Retrieve messages in a thread",
                "tags": [
                    "Messages"
                ]
            }
        },
        "/observation_field_values": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create an observation field value\n",
                "parameters": [
                    {
                        "description": "Observation field value object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostObservationFieldValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Field Value Create",
                "tags": [
                    "Observation Field Values"
                ]
            }
        },
        "/observation_field_values/{id}": {
            "delete": {
                "description": "Delete an observation field value\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Field Value Delete",
                "tags": [
                    "Observation Field Values"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update an observation field value\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Observation field value object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostObservationFieldValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Field Value Update",
                "tags": [
                    "Observation Field Values"
                ]
            }
        },
        "/observation_photos": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Create an observation photo\n",
                "parameters": [
                    {
                        "description": "Observation ID",
                        "in": "formData",
                        "name": "observation_photo[observation_id]",
                        "type": "integer"
                    },
                    {
                        "description": "Observation UUID",
                        "in": "formData",
                        "name": "observation_photo[uuid]",
                        "type": "string"
                    },
                    {
                        "description": "The photo",
                        "in": "formData",
                        "name": "file",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Photo Create",
                "tags": [
                    "Observation Photos"
                ]
            }
        },
        "/observation_photos/{id}": {
            "delete": {
                "description": "Delete an observation photo\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Photo Delete",
                "tags": [
                    "Observation Photos"
                ]
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Update an observation photo",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Position in which the photo is displayed for the observation",
                        "in": "formData",
                        "name": "observation_photo[position]",
                        "type": "integer"
                    },
                    {
                        "description": "The photo",
                        "in": "formData",
                        "name": "file",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Photo Update",
                "tags": [
                    "Observation Photos"
                ]
            }
        },
        "/observations": {
            "get": {
                "description": "Given zero to many of following parameters, returns observations\nmatching the search criteria. The large size of the observations index\nprevents us from supporting the `page` parameter when retrieving records\nfrom large result sets. If you need to retrieve large numbers of\nrecords, use the `per_page` and `id_above` or `id_below` parameters\ninstead.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/order_by"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of observations\n",
                        "schema": {
                            "$ref": "#/definitions/ObservationsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Observation Search",
                "tags": [
                    "Observations"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create an observation\n",
                "parameters": [
                    {
                        "description": "Comment object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostObservation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Create",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/deleted": {
            "get": {
                "description": "Given a starting date, return an array of IDs of the authenticated\nuser's observations that have been deleted since that date. Requires\nauthentication\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/since"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observations Deleted",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/histogram": {
            "get": {
                "description": "Given zero to many of following parameters, returns histogram data about\nobservations matching the search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    },
                    {
                        "$ref": "#/parameters/date_field"
                    },
                    {
                        "$ref": "#/parameters/interval"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of histogram data\n"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Observation Histogram",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/identifiers": {
            "get": {
                "description": "Given zero to many of following parameters, returns identifiers of\nobservations matching the search criteria and the count of\nobservations they have identified, ordered by count descending. A\nmaximum of 500 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of identifiers\n",
                        "schema": {
                            "$ref": "#/definitions/UserCountsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Observation Identifiers",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/observers": {
            "get": {
                "description": "Given zero to many of following parameters, returns observers of\nobservations matching the search criteria and the count of\nobservations and distinct taxa of rank `species` they have observed. A\nmaximum of 500 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of observers\n",
                        "schema": {
                            "$ref": "#/definitions/ObservationsObserversResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Observation Observers",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/popular_field_values": {
            "get": {
                "description": "Given zero to many of following parameters, returns an array of\nrelevant controlled terms values and a monthly histogram\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Observation Popular Field Values",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/species_counts": {
            "get": {
                "description": "Given zero to many of following parameters, returns `leaf taxa`\nassociated with observations matching the search criteria and the count of\nobservations they are associated with, ordered by count descending.\n`Leaf taxa` are the leaves of the taxonomic tree containing only the\ntaxa associated with observations matching the search criteria.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page_species_counts"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of taxa\n",
                        "schema": {
                            "$ref": "#/definitions/SpeciesCountsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Observation Species Counts",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/updates": {
            "get": {
                "description": "Given zero to many of following parameters, returns an array of objects\nrepresenting new comments and identifications on observations the authenticated\nuser has subscribed to. Requires authentication\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/created_after"
                    },
                    {
                        "$ref": "#/parameters/viewed"
                    },
                    {
                        "$ref": "#/parameters/observations_by"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation User Updates",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}": {
            "delete": {
                "description": "Delete an observation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Delete",
                "tags": [
                    "Observations"
                ]
            },
            "get": {
                "description": "Given an ID, or an array of IDs in comma-delimited format, returns\ncorresponding observations. A maximum of 200 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_multi_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of observations\n",
                        "schema": {
                            "$ref": "#/definitions/ObservationsShowResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Observation Details",
                "tags": [
                    "Observations"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update an observation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Comment object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostObservation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Update",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/fave": {
            "post": {
                "description": "Fave an observation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observations Fave",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/quality/{metric}": {
            "delete": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "description": "Delete a quality metric\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "$ref": "#/parameters/path_metric"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Quality Metric Delete",
                "tags": [
                    "Observations"
                ]
            },
            "post": {
                "description": "Set the value of a quality metric\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "$ref": "#/parameters/path_metric"
                    },
                    {
                        "description": "Quality object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostQuality"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Quality Metric Set",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/review": {
            "post": {
                "description": "Review an observation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observations Review",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/subscriptions": {
            "get": {
                "description": "Fetches any subscriptions the current user has to this observation\nor the observer\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Subscriptions",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/taxon_summary": {
            "get": {
                "description": "Fetches information about this observation's taxon, within the context\nof this observation's location\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Observation Taxon Summary",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/unfave": {
            "delete": {
                "description": "Unfave an observation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observations Unfave",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/unreview": {
            "post": {
                "description": "Unreview an observation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observations Unreview",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/observations/{id}/viewed_updates": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Mark all updates associated with this observation as viewed by logged-in user\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Field Value Update",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/photos": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Create a photo\n",
                "parameters": [
                    {
                        "description": "The photo",
                        "in": "formData",
                        "name": "file",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Photo Create",
                "tags": [
                    "Photos"
                ]
            }
        },
        "/places/autocomplete": {
            "get": {
                "description": "Given an string, returns places with names starting with the search\nterm.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/autocomplete_q"
                    },
                    {
                        "description": "Sort field",
                        "enum": [
                            "area"
                        ],
                        "in": "query",
                        "name": "order_by",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an results array of places\n",
                        "schema": {
                            "$ref": "#/definitions/PlacesResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Place Autocomplete",
                "tags": [
                    "Places"
                ]
            }
        },
        "/places/nearby": {
            "get": {
                "description": "Given an bounding box, and an optional name query, return `standard`\niNaturalist curator approved and `community` non-curated places nearby\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/nelat_required"
                    },
                    {
                        "$ref": "#/parameters/nelng_required"
                    },
                    {
                        "$ref": "#/parameters/swlat_required"
                    },
                    {
                        "$ref": "#/parameters/swlng_required"
                    },
                    {
                        "description": "Name must match this value",
                        "in": "query",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an results object containing\n`standard` and `community` places\n",
                        "schema": {
                            "$ref": "#/definitions/NearbyPlacesResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Nearby Places",
                "tags": [
                    "Places"
                ]
            }
        },
        "/places/{id}": {
            "get": {
                "description": "Given an ID, or an array of IDs in comma-delimited format, returns\ncorresponding places. A maximum of 500 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_multi_id_or_slug"
                    },
                    {
                        "description": "Admin level of a place, or an array of admin levels\nin comma-delimited format. Supported admin levels are: -10\n(continent), 0 (country), 10 (state), 20 (county), 30 (town),\n100 (park)",
                        "enum": [
                            -10,
                            0,
                            10,
                            20,
                            30,
                            100
                        ],
                        "in": "query",
                        "items": {
                            "type": "integer"
                        },
                        "name": "admin_level",
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an results array of places\n",
                        "schema": {
                            "$ref": "#/definitions/PlacesResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Place Details",
                "tags": [
                    "Places"
                ]
            }
        },
        "/places/{place_id}/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Returns a PNG map tile representing the boundary of this place,\nfollowing the XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_place_id"
                    },
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Place Tiles",
                "tags": [
                    "Polygon Tiles"
                ]
            }
        },
        "/points/{zoom}/{x}/{y}.grid.json": {
            "get": {
                "description": "Given zero to many of following parameters, returns a JSON file\nfollowing the UTFGrid spec, representing observations matching\nthe search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a UTFGrid\n",
                        "schema": {
                            "$ref": "#/definitions/UTFGridResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Points Tiles UTFGrid",
                "tags": [
                    "UTFGrid"
                ]
            }
        },
        "/points/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Given zero to many of following parameters, returns a PNG image\nrepresenting the matching observations within a map tile, following\nthe XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/acc"
                    },
                    {
                        "$ref": "#/parameters/captive"
                    },
                    {
                        "$ref": "#/parameters/endemic"
                    },
                    {
                        "$ref": "#/parameters/geo"
                    },
                    {
                        "$ref": "#/parameters/id_please"
                    },
                    {
                        "$ref": "#/parameters/identified"
                    },
                    {
                        "$ref": "#/parameters/introduced"
                    },
                    {
                        "$ref": "#/parameters/mappable"
                    },
                    {
                        "$ref": "#/parameters/native"
                    },
                    {
                        "$ref": "#/parameters/out_of_range"
                    },
                    {
                        "$ref": "#/parameters/pcid"
                    },
                    {
                        "$ref": "#/parameters/photos"
                    },
                    {
                        "$ref": "#/parameters/popular"
                    },
                    {
                        "$ref": "#/parameters/sounds"
                    },
                    {
                        "$ref": "#/parameters/taxon_is_active"
                    },
                    {
                        "$ref": "#/parameters/threatened"
                    },
                    {
                        "$ref": "#/parameters/verifiable"
                    },
                    {
                        "$ref": "#/parameters/licensed"
                    },
                    {
                        "$ref": "#/parameters/photo_licensed"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/license"
                    },
                    {
                        "$ref": "#/parameters/ofv_datatype"
                    },
                    {
                        "$ref": "#/parameters/photo_license"
                    },
                    {
                        "$ref": "#/parameters/place_id"
                    },
                    {
                        "$ref": "#/parameters/project_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/site_id"
                    },
                    {
                        "$ref": "#/parameters/sound_license"
                    },
                    {
                        "$ref": "#/parameters/taxon_id"
                    },
                    {
                        "$ref": "#/parameters/without_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/taxon_name"
                    },
                    {
                        "$ref": "#/parameters/user_id"
                    },
                    {
                        "$ref": "#/parameters/user_login"
                    },
                    {
                        "$ref": "#/parameters/ident_user_id"
                    },
                    {
                        "$ref": "#/parameters/day"
                    },
                    {
                        "$ref": "#/parameters/month"
                    },
                    {
                        "$ref": "#/parameters/year"
                    },
                    {
                        "$ref": "#/parameters/created_day"
                    },
                    {
                        "$ref": "#/parameters/created_month"
                    },
                    {
                        "$ref": "#/parameters/created_year"
                    },
                    {
                        "$ref": "#/parameters/term_id"
                    },
                    {
                        "$ref": "#/parameters/term_value_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_id"
                    },
                    {
                        "$ref": "#/parameters/without_term_value_id"
                    },
                    {
                        "$ref": "#/parameters/term_id_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/annotation_user_id"
                    },
                    {
                        "$ref": "#/parameters/acc_above"
                    },
                    {
                        "$ref": "#/parameters/acc_below"
                    },
                    {
                        "$ref": "#/parameters/acc_below_or_unknown"
                    },
                    {
                        "$ref": "#/parameters/d1"
                    },
                    {
                        "$ref": "#/parameters/d2"
                    },
                    {
                        "$ref": "#/parameters/created_d1"
                    },
                    {
                        "$ref": "#/parameters/created_d2"
                    },
                    {
                        "$ref": "#/parameters/created_on"
                    },
                    {
                        "$ref": "#/parameters/observed_on"
                    },
                    {
                        "$ref": "#/parameters/unobserved_by_user_id"
                    },
                    {
                        "$ref": "#/parameters/apply_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/cs"
                    },
                    {
                        "$ref": "#/parameters/csa"
                    },
                    {
                        "$ref": "#/parameters/csi"
                    },
                    {
                        "$ref": "#/parameters/geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/taxon_geoprivacy"
                    },
                    {
                        "$ref": "#/parameters/hrank"
                    },
                    {
                        "$ref": "#/parameters/lrank"
                    },
                    {
                        "$ref": "#/parameters/iconic_taxa"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/identifications"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/radius"
                    },
                    {
                        "$ref": "#/parameters/nelat"
                    },
                    {
                        "$ref": "#/parameters/nelng"
                    },
                    {
                        "$ref": "#/parameters/swlat"
                    },
                    {
                        "$ref": "#/parameters/swlng"
                    },
                    {
                        "$ref": "#/parameters/list_id"
                    },
                    {
                        "$ref": "#/parameters/not_in_project"
                    },
                    {
                        "$ref": "#/parameters/not_matching_project_rules_for"
                    },
                    {
                        "$ref": "#/parameters/observation_accuracy_experiment_id"
                    },
                    {
                        "$ref": "#/parameters/q"
                    },
                    {
                        "$ref": "#/parameters/search_on"
                    },
                    {
                        "$ref": "#/parameters/quality_grade"
                    },
                    {
                        "$ref": "#/parameters/updated_since"
                    },
                    {
                        "$ref": "#/parameters/viewer_id"
                    },
                    {
                        "$ref": "#/parameters/reviewed"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Points Tiles",
                "tags": [
                    "Observation Tiles"
                ]
            }
        },
        "/posts": {
            "get": {
                "description": "Return journal posts from the iNaturalist site\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/posts_login"
                    },
                    {
                        "$ref": "#/parameters/posts_project_id"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Posts Search",
                "tags": [
                    "Posts"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create a post\n",
                "parameters": [
                    {
                        "description": "Post object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Post Create",
                "tags": [
                    "Posts"
                ]
            }
        },
        "/posts/for_user": {
            "get": {
                "description": "Return journal posts from the iNaturalist site. If the user is logged-in,\nalso return posts from projects the user is subscribed to\n",
                "parameters": [
                    {
                        "description": "returns posts newer than the post with this ID",
                        "format": "date-time",
                        "in": "query",
                        "name": "newer_than",
                        "type": "string"
                    },
                    {
                        "description": "returns posts older than the post with this ID",
                        "format": "date-time",
                        "in": "query",
                        "name": "older_than",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Posts For User",
                "tags": [
                    "Posts"
                ]
            }
        },
        "/posts/{id}": {
            "delete": {
                "description": "Delete a post\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Post Delete",
                "tags": [
                    "Posts"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update a post\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Post object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Post Update",
                "tags": [
                    "Posts"
                ]
            }
        },
        "/project_observations": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Add an observation to a project",
                "parameters": [
                    {
                        "description": "ProjectObservation object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostProjectObservation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Observation Create",
                "tags": [
                    "Project Observations"
                ]
            }
        },
        "/project_observations/{id}": {
            "delete": {
                "description": "Delete a project observation",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Observation Delete",
                "tags": [
                    "Project Observations"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update a project observation",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Comment object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateProjectObservation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Observation Update",
                "tags": [
                    "Project Observations"
                ]
            }
        },
        "/projects": {
            "get": {
                "description": "Given zero to many of following parameters, returns projects\nmatching the search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/autocomplete_q_not_required"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/associated_place_id"
                    },
                    {
                        "$ref": "#/parameters/projects_radius"
                    },
                    {
                        "$ref": "#/parameters/featured"
                    },
                    {
                        "$ref": "#/parameters/noteworthy"
                    },
                    {
                        "$ref": "#/parameters/projects_site_id"
                    },
                    {
                        "$ref": "#/parameters/rule_details"
                    },
                    {
                        "$ref": "#/parameters/type"
                    },
                    {
                        "$ref": "#/parameters/member_id"
                    },
                    {
                        "$ref": "#/parameters/has_params"
                    },
                    {
                        "$ref": "#/parameters/has_posts"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/projects_order_by"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of projects\n",
                        "schema": {
                            "$ref": "#/definitions/ProjectsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Project Search",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/autocomplete": {
            "get": {
                "description": "Given an string, returns projects with titles starting with the search term\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/autocomplete_q"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/not_id"
                    },
                    {
                        "$ref": "#/parameters/lat"
                    },
                    {
                        "$ref": "#/parameters/lng"
                    },
                    {
                        "$ref": "#/parameters/associated_place_id"
                    },
                    {
                        "$ref": "#/parameters/projects_radius"
                    },
                    {
                        "$ref": "#/parameters/featured"
                    },
                    {
                        "$ref": "#/parameters/noteworthy"
                    },
                    {
                        "$ref": "#/parameters/projects_site_id"
                    },
                    {
                        "$ref": "#/parameters/rule_details"
                    },
                    {
                        "$ref": "#/parameters/type"
                    },
                    {
                        "$ref": "#/parameters/member_id"
                    },
                    {
                        "$ref": "#/parameters/has_params"
                    },
                    {
                        "$ref": "#/parameters/has_posts"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an results array of places\n",
                        "schema": {
                            "$ref": "#/definitions/ProjectsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Project Autocomplete",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Given an ID, or an array of IDs in comma-delimited format, returns\ncorresponding projects. A maximum of 100 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_multi_id_or_slug"
                    },
                    {
                        "$ref": "#/parameters/rule_details"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an array of projects\n",
                        "schema": {
                            "$ref": "#/definitions/ProjectsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Project Details",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Add an observation to a project",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "ProjectObservation object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostProjectAdd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Add",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/join": {
            "post": {
                "description": "Join a project\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Projects Join",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/leave": {
            "delete": {
                "description": "Leave a project\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Projects Leave",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/members": {
            "get": {
                "description": "Given an ID, return members of the project\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Membership role",
                        "enum": [
                            "curator",
                            "manager"
                        ],
                        "in": "query",
                        "name": "role",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and an results array of projects\n",
                        "schema": {
                            "$ref": "#/definitions/ProjectMembersResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Project Members",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/membership": {
            "get": {
                "description": "Given an ID, or an array of IDs in comma-delimited format, return the details of the\nauthenticated user's membership in these projects\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_multi_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Membership of current user",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/remove": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Remove an observation from a project",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "ProjectObservation object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostProjectAdd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Add",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/projects/{id}/subscriptions": {
            "get": {
                "deprecated": true,
                "description": "[Deprecated] Subscriptions to projects are managed through joining and\nleaving projects, so this will not return any useful information.\n\nGiven an ID, return subscription of the current user\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Subscriptions",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/search": {
            "get": {
                "description": "Given zero to many of following parameters, returns object matching the search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/search_q"
                    },
                    {
                        "$ref": "#/parameters/sources"
                    },
                    {
                        "$ref": "#/parameters/associated_place_id"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "Site Search",
                "tags": [
                    "Search"
                ]
            }
        },
        "/subscriptions/observation/{id}/subscribe": {
            "post": {
                "description": "Toggles current user's subscription to this observation. If the logged-in\nuser is not subscribed, POSTing here will subscribe them. If they are already\nsubscribed, this will remove the subscription\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Subscribe",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/subscriptions/project/{id}/subscribe": {
            "post": {
                "description": "Toggles current user's subscription to this project. If the logged-in\nuser is not subscribed, POSTing here will subscribe them. If they are already\nsubscribed, this will remove the subscription\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Project Subscribe",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/taxa": {
            "get": {
                "description": "Given zero to many of following parameters, returns taxa matching the search criteria\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/autocomplete_q_not_required"
                    },
                    {
                        "description": "Taxon is `active`",
                        "in": "query",
                        "name": "is_active",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/taxa_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/parent_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/rank_level"
                    },
                    {
                        "$ref": "#/parameters/id_above"
                    },
                    {
                        "$ref": "#/parameters/id_below"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/only_id"
                    },
                    {
                        "$ref": "#/parameters/all_names"
                    },
                    {
                        "$ref": "#/parameters/order"
                    },
                    {
                        "$ref": "#/parameters/taxa_order_by"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with search metadata and a results array of taxa\n",
                        "schema": {
                            "$ref": "#/definitions/TaxaShowResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Taxon Search",
                "tags": [
                    "Taxa"
                ]
            }
        },
        "/taxa/autocomplete": {
            "get": {
                "description": "Given an string, returns taxa with names starting with the search term\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/autocomplete_q"
                    },
                    {
                        "description": "Taxon is `active`",
                        "in": "query",
                        "name": "is_active",
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/parameters/taxa_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/rank"
                    },
                    {
                        "$ref": "#/parameters/rank_level"
                    },
                    {
                        "description": "Number of results to return in a `page`. The maximum value is 30 for this endpoint",
                        "in": "query",
                        "name": "per_page",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/locale"
                    },
                    {
                        "$ref": "#/parameters/preferred_place_id"
                    },
                    {
                        "$ref": "#/parameters/all_names"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with search metadata and a results array of taxa\n",
                        "schema": {
                            "$ref": "#/definitions/TaxaAutocompleteResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Taxon Autocomplete",
                "tags": [
                    "Taxa"
                ]
            }
        },
        "/taxa/{id}": {
            "get": {
                "description": "Given an ID, or an array of IDs in comma-delimited format, returns\ncorresponding taxa. A maximum of 30 results will be returned\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_multi_id"
                    },
                    {
                        "$ref": "#/parameters/rank_level"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an object with metadata and a results array of taxa\n",
                        "schema": {
                            "$ref": "#/definitions/TaxaShowResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Taxon Details",
                "tags": [
                    "Taxa"
                ]
            }
        },
        "/taxon_places/{taxon_id}/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Returns a PNG map tile representing the boundaries of places this taxon\nis known to occur, following the XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Taxon Place Tiles",
                "tags": [
                    "Polygon Tiles"
                ]
            }
        },
        "/taxon_ranges/{taxon_id}/{zoom}/{x}/{y}.png": {
            "get": {
                "description": "Returns a PNG map tile representing the range of this taxon, following\nthe XYZ tiling scheme\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_taxon_id"
                    },
                    {
                        "$ref": "#/parameters/zoom"
                    },
                    {
                        "$ref": "#/parameters/x"
                    },
                    {
                        "$ref": "#/parameters/y"
                    },
                    {
                        "$ref": "#/parameters/tile_color"
                    },
                    {
                        "$ref": "#/parameters/ttl"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PNG map tile image\n"
                    }
                },
                "summary": "Taxon Range Tiles",
                "tags": [
                    "Polygon Tiles"
                ]
            }
        },
        "/users/autocomplete": {
            "get": {
                "description": "Given an string, returns users with names or logins starting with the search term\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/autocomplete_q"
                    },
                    {
                        "$ref": "#/parameters/autocomplete_project_id"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "User Autocomplete",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/me": {
            "get": {
                "description": "Fetch the logged-in user",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Users Me",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/resend_confirmation": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Resend an email confirmation",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "User Resend Confirmation",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/update_session": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update the logged-in user's session",
                "parameters": [
                    {
                        "description": "Comment object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostUserUpdateSession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "User Update Session",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Given an ID, returns corresponding user",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "User Details",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update a user\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "User Update",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{id}/mute": {
            "delete": {
                "description": "Remove a mute on the user specified by {id}",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an empty 200 response on success"
                    },
                    "404": {
                        "description": "Specified user does not exist"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Unmute a User",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "description": "Make it so the authenticated user stops receiving notifications about\nactivity by the user specified by {id}.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an empty 200 response on success"
                    },
                    "404": {
                        "description": "Specified user does not exist"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Mute a User",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{id}/projects": {
            "get": {
                "description": "Return projects as user has joined / followed\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "$ref": "#/parameters/rule_details"
                    },
                    {
                        "$ref": "#/parameters/project_type"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "User Projects",
                "tags": [
                    "Users"
                ]
            }
        },
        "/votes/unvote/annotation/{id}": {
            "delete": {
                "description": "Remove a vote from annotation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/annotation_path_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Annotation Unvote",
                "tags": [
                    "Annotations"
                ]
            }
        },
        "/votes/unvote/observation/{id}": {
            "delete": {
                "description": "Remove a vote from an observation",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Vote object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostObservationVote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Unvote",
                "tags": [
                    "Observations"
                ]
            }
        },
        "/votes/vote/annotation/{id}": {
            "post": {
                "description": "Vote on an annotation\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/annotation_path_id"
                    },
                    {
                        "description": "Vote object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostVote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Annotation Vote",
                "tags": [
                    "Annotations"
                ]
            }
        },
        "/votes/vote/observation/{id}": {
            "post": {
                "description": "Vote on an observation. A vote with an empty `scope` is recorded as a\n`fave` of the observation. A vote with scope `needs_id` is recorded as a\nvote on the Quality Grade criterion \"can the Community ID still be\nconfirmed or improved?\", and can be an up or down vote\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/path_id"
                    },
                    {
                        "description": "Vote object",
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/PostObservationVote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "api_token": []
                    }
                ],
                "summary": "Observation Vote",
                "tags": [
                    "Observations"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "securityDefinitions": {
        "api_token": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Create, delete, and vote",
            "name": "Annotations"
        },
        {
            "description": "Create, update, and delete",
            "name": "Comments"
        },
        {
            "description": "Search and fetch",
            "name": "Controlled Terms"
        },
        {
            "description": "Create, update, and delete flags",
            "name": "Flags"
        },
        {
            "description": "Create, update, and delete",
            "name": "Identifications"
        },
        {
            "description": "Create, fetch, delete",
            "name": "Messages"
        },
        {
            "description": "Create, update, and delete",
            "name": "Observation Field Values"
        },
        {
            "description": "Create and delete",
            "name": "Observation Photos"
        },
        {
            "description": "CRUD, search, faving, quality metrics, stats, and more",
            "name": "Observations"
        },
        {
            "description": "Search and fetch",
            "name": "Places"
        },
        {
            "description": "Fetch site and project posts",
            "name": "Posts"
        },
        {
            "description": "Create, update, and delete",
            "name": "Project Observations"
        },
        {
            "description": "Search and fetch projects and members",
            "name": "Projects"
        },
        {
            "description": "Site search",
            "name": "Search"
        },
        {
            "description": "Search and fetch",
            "name": "Taxa"
        },
        {
            "description": "Fetch and update",
            "name": "Users"
        },
        {
            "description": "Map observation search results",
            "name": "Observation Tiles"
        },
        {
            "description": "Place geometry and taxon range tiles",
            "name": "Polygon Tiles"
        },
        {
            "description": "JSON for observation tiles",
            "name": "UTFGrid"
        }
    ]
}